<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>	
	
	<groupId>com.springboot</groupId>
	<artifactId>forent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>forent</name>
	<description>Project for renting properties</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.keycloak</groupId>
		    <artifactId>keycloak-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.c4-soft.springaddons</groupId>
		    <artifactId>spring-security-oauth2-test-webmvc-addons</artifactId>
		    <version>2.3.4</version>
		    <scope>test</scope>
		</dependency>
				
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>5.2.4.Final</version>
		</dependency>


		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-inline</artifactId>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
 
 	<dependencyManagement>
	    <dependencies>
	        <dependency>
	            <groupId>org.keycloak.bom</groupId>
	            <artifactId>keycloak-adapter-bom</artifactId>
	            <version>11.0.3</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	    </dependencies>
	</dependencyManagement>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>test-reports</id>
						<phase>test</phase>
						<configuration>
							<tasks>
								<junitreport todir="target/surefire-reports">
									<fileset dir="target/surefire-reports">
										<include name="'/'.xml"/>
									</fileset>
									<report format="noframes" todir="target/surefire-reports"/>
								</junitreport>	
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-junit</artifactId>
						<version>1.6.2</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
		        <groupId>org.jacoco</groupId>
		        <artifactId>jacoco-maven-plugin</artifactId>
		        <version>0.8.6</version>
		        <!--><executions>
		        	<execution>
		        		<goals>
		        			<goal>prepare-agent</goal>
		        		</goals>
		        	</execution>
		        	<execution>
		        		<id>report</id>
		        		<phase>verify</phase>
		        		<goals>
		        			<goal>report</goal>
		        		</goals>
		        	</execution>
		        </executions>-->
		         <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <!--<phase>test</phase>-->
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file to write the execution data to. -->
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                            <!-- Connection with SureFire plugin -->
                            <propertyName>sonarUnitTestArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to where the execution data is located. -->
                            <dataFile>${sonar.jacoco.reportPath}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${jacoco.ut.outputdir}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file to write the execution data to. -->
                            <destFile>${sonar.jacoco.itReportPath}</destFile>
                            <!-- Connection with Failsafe plugin -->
                            <propertyName>sonarIntegrationTestArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to where the execution data is located. -->
                            <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${jacoco.it.outputdir}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <dataFile>${sonar.jacoco.itutCombinedReportPath}</dataFile>
                            <haltOnFailure>true</haltOnFailure>
                            <rules>
                                <!--  implementation is needed only for Maven 2  -->
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <!--  Bump this up.  Currently a very low 0.01 -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.01</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
			</plugin>
		</plugins>
	</build>

</project>
